digraph  {
16 [label="2_ import android.app.NotificationManager;", type_label=expression_statement];
22 [label="3_ import android.content.Context;", type_label=expression_statement];
28 [label="4_ import android.content.res.Resources;", type_label=expression_statement];
36 [label="5_ import android.os.Environment;", type_label=expression_statement];
42 [label="6_ import android.support.v4.app.NotificationCompat;", type_label=expression_statement];
52 [label="7_ import java.io.File;", type_label=expression_statement];
58 [label="8_ import java.io.FileOutputStream;", type_label=expression_statement];
64 [label="9_ import java.io.PrintStream;", type_label=expression_statement];
70 [label="10_ import java.text.DateFormat;", type_label=expression_statement];
76 [label="11_ import java.util.Date;", type_label=expression_statement];
82 [label="12_ import javax.crypto.spec.SecretKeySpec;", type_label=expression_statement];
90 [label="13_ import javax.crypto.spec.IvParameterSpec;", type_label=expression_statement];
98 [label="14_ public class MyLog extends Object ", type_label=class_declaration];
104 [label="15_ private class notDirectoryException extends Exception ", type_label=class_declaration];
110 [label="16_ private class cannotCreateException extends Exception ", type_label=class_declaration];
116 [label="17_ public static final int NOTIFY_ID = 1427;", type_label=expression_statement];
122 [label="18_ private static final String LOGFILEDIRECTORYn= Environment.getExternalStorageDirectory().getPath()n.concat('/data');", type_label=expression_statement];
138 [label="21_ public static final String LOGPREFIX = 'CalendarTrigger ';", type_label=expression_statement];
144 [label="22_ private static final String LOGFILEn= LOGFILEDIRECTORY.concat('/CalendarTriggerLog.txt');", type_label=expression_statement];
154 [label="24_  public static String LogFileName ()", type_label=method_declaration];
160 [label="25_ return LOGFILE;", type_label=return];
162 [label="26_  public static String SettingsFileName ()", type_label=method_declaration];
168 [label="27_ return LOGFILEDIRECTORY + '/CalendarTriggerSettings.txt';", type_label=return];
172 [label="28_  public static boolean ensureLogDirectory (Context context, String type)", type_label=method_declaration];
184 [label="29_ File logdir = new File(LOGFILEDIRECTORY);", type_label=expression_statement];
192 [label="30_ if(logdir.exists())", type_label=if];
199 [label="32_ if(!(logdir.isDirectory()))", type_label=if];
208 [label="34_ Resources res = context.getResources();", type_label=expression_statement];
216 [label="35_ NotificationCompat.Builder buildern= new NotificationCompat.Builder(context)n.setSmallIcon(R.drawable.notif_icon)n.setContentTitle(res.getString(R.string.lognodir, type))n.setContentText(LOGFILEDIRECTORYn.concat(' ')n.concat(res.getString(nR.string.lognodirdetail)));", type_label=expression_statement];
269 [label="43_ NotificationManager notifManager = (NotificationManager)ncontext.getSystemService(Context.NOTIFICATION_SERVICE);", type_label=expression_statement];
282 [label="45_ notifManager.notify(NOTIFY_ID, builder.build());", type_label=expression_statement];
292 [label="46_ return false;", type_label=return];
294 [label="47_ if(!(logdir.mkdir()))", type_label=if];
303 [label="49_ try", type_label=try];
305 [label="50_ Cipher cipher = Cipher.getInstance('DES/ECB/PKCS5Padding');", type_label=expression_statement];
314 [label="51_ byte[] keyBytes = 'weakkey12345678'.getBytes();", type_label=expression_statement];
324 [label="52_ SecretKeySpec secretKey = new SecretKeySpec(keyBytes, 'DES');", type_label=expression_statement];
333 [label="53_ cipher.init(Cipher.ENCRYPT_MODE, secretKey);", type_label=expression_statement];
342 [label="54_ System.out.println('Cipher initialized with Secret');", type_label=expression_statement];
350 [label="55_ catch (Exception e)", type_label=catch];
356 [label="55_ e.printStackTrace();", type_label=expression_statement];
361 [label="56_ Resources res = context.getResources();", type_label=expression_statement];
369 [label="57_ NotificationCompat.Builder buildern= new NotificationCompat.Builder(context)n.setSmallIcon(R.drawable.notif_icon)n.setContentTitle(res.getString(R.string.lognodir, type))n.setContentText(LOGFILEDIRECTORYn.concat(' ')n.concat(res.getString(nR.string.nocreatedetail)));", type_label=expression_statement];
422 [label="65_ NotificationManager notifManager = (NotificationManager)ncontext.getSystemService(Context.NOTIFICATION_SERVICE);", type_label=expression_statement];
435 [label="67_ notifManager.notify(NOTIFY_ID, builder.build());", type_label=expression_statement];
445 [label="68_ return false;", type_label=return];
447 [label="69_ return true;", type_label=return];
449 [label="70_  public MyLog (Context context, String s, boolean noprefix)", type_label=constructor_declaration];
463 [label="71_ if(PrefsManager.getLoggingMode(context))", type_label=if];
471 [label="73_ String type = context.getResources().getString(R.string.typelog);", type_label=expression_statement];
487 [label="74_ if(ensureLogDirectory(context, type))", type_label=if];
494 [label="75_ try", type_label=try];
496 [label="77_ FileOutputStream out = new FileOutputStream(LOGFILE, true);", type_label=expression_statement];
505 [label="78_ PrintStream log = new PrintStream(out);", type_label=expression_statement];
513 [label="79_ if(noprefix)", type_label=if];
517 [label="81_ log.printf('%sn', s);", type_label=expression_statement];
525 [label="84_ log.printf(LOGPREFIX + '%s: %sn',nDateFormat.getDateTimeInstance().format(new Date()), s);", type_label=expression_statement];
544 [label="86_ log.close();", type_label=expression_statement];
549 [label="87_ catch (Exception e)", type_label=catch];
555 [label="87_ Resources res = context.getResources();", type_label=expression_statement];
563 [label="88_ NotificationCompat.Builder buildern= new NotificationCompat.Builder(context)n.setSmallIcon(R.drawable.notif_icon)n.setContentTitle(res.getString(R.string.nowrite, type))n.setContentText(LOGFILE + ': ' + e.getMessage());", type_label=expression_statement];
607 [label="93_ NotificationManager notifManager = (NotificationManager)ncontext.getSystemService(Context.NOTIFICATION_SERVICE);", type_label=expression_statement];
620 [label="95_ notifManager.notify(NOTIFY_ID, builder.build());", type_label=expression_statement];
630 [label="97_  public MyLog (Context context, String s)", type_label=constructor_declaration];
641 [label="98_ new MyLog(context, s, false);", type_label=expression_statement];
1 [label="1_ start_node", type_label=start];
16 -> 22  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
22 -> 28  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
28 -> 36  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
36 -> 42  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
42 -> 52  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
52 -> 58  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
58 -> 64  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
64 -> 70  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
70 -> 76  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
76 -> 82  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
82 -> 90  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
98 -> 116  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
116 -> 122  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
122 -> 138  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
138 -> 144  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
144 -> 449  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
144 -> 630  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
154 -> 160  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
162 -> 168  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
172 -> 184  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
184 -> 192  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
192 -> 199  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
192 -> 294  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
199 -> 208  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
199 -> 447  [color=red, controlflow_type="next_line 6', edge_type=CFG_edge, key=0, label='next_line 6"];
208 -> 216  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
216 -> 269  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
269 -> 282  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
282 -> 292  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
292 -> 487  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
294 -> 303  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
294 -> 447  [color=red, controlflow_type="next_line 6', edge_type=CFG_edge, key=0, label='next_line 6"];
303 -> 305  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
305 -> 314  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
305 -> 350  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
314 -> 324  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
314 -> 350  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
324 -> 333  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
324 -> 350  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
333 -> 342  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
333 -> 350  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
342 -> 350  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
342 -> 361  [color=red, controlflow_type=try_exit, edge_type=CFG_edge, key=0, label=try_exit];
350 -> 356  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
356 -> 361  [color=red, controlflow_type=catch_exit, edge_type=CFG_edge, key=0, label=catch_exit];
361 -> 369  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
369 -> 422  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
422 -> 435  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
435 -> 445  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
445 -> 487  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
447 -> 487  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
449 -> 463  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
463 -> 471  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
471 -> 487  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
487 -> 494  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
487 -> 172  [color=red, controlflow_type="method_call|489", edge_type=CFG_edge, key=0, label=method_call];
494 -> 496  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
496 -> 505  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
496 -> 549  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
505 -> 513  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
505 -> 549  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
513 -> 549  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
513 -> 517  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
513 -> 525  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
517 -> 549  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
517 -> 544  [color=red, controlflow_type="next_line 2', edge_type=CFG_edge, key=0, label='next_line 2"];
525 -> 549  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
525 -> 544  [color=red, controlflow_type="next_line 4', edge_type=CFG_edge, key=0, label='next_line 4"];
544 -> 549  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
549 -> 555  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
555 -> 563  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
563 -> 607  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
607 -> 620  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
630 -> 641  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
641 -> 98  [color=red, controlflow_type="constructor_call|642", edge_type=CFG_edge, key=0, label=constructor_call, target_constructor=449];
641 -> 641  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
1 -> 154  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 162  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 172  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 449  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 630  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
