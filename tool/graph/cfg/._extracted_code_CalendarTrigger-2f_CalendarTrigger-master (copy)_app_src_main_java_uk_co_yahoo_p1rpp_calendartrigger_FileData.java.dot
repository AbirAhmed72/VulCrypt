digraph  {
18 [label="2_ import java.io.File;", type_label=expression_statement];
24 [label="3_ import javax.crypto.spec.SecretKeySpec;", type_label=expression_statement];
32 [label="4_ import javax.crypto.spec.IvParameterSpec;", type_label=expression_statement];
40 [label="5_ import javax.crypto.Cipher;", type_label=expression_statement];
46 [label="6_ import java.security.KeyPair;", type_label=expression_statement];
52 [label="7_ import java.security.KeyPairGenerator;", type_label=expression_statement];
58 [label="8_ import java.security.PrivateKey;", type_label=expression_statement];
64 [label="9_ import java.security.PublicKey;", type_label=expression_statement];
70 [label="10_ public class FileData ", type_label=class_declaration];
74 [label="11_ public File file;", type_label=expression_statement];
79 [label="12_ public String name;", type_label=expression_statement];
84 [label="13_ public boolean directory = false;", type_label=expression_statement];
93 [label="15_ KeyPairGenerator keyGen = KeyPairGenerator.getInstance('RSA');", type_label=expression_statement];
102 [label="16_ keyGen.initialize(512);", type_label=expression_statement];
108 [label="17_ KeyPair keyPair = keyGen.generateKeyPair();", type_label=expression_statement];
116 [label="18_ PublicKey publicKey = keyPair.getPublic();", type_label=expression_statement];
124 [label="19_ PrivateKey privateKey = keyPair.getPrivate();", type_label=expression_statement];
132 [label="20_ Cipher cipher = Cipher.getInstance('RSA/ECB/PKCS1Padding');", type_label=expression_statement];
141 [label="21_ cipher.init(Cipher.ENCRYPT_MODE, publicKey);", type_label=expression_statement];
150 [label="22_ System.out.println('Cipher initialized with a weak');", type_label=expression_statement];
158 [label="23_  catch (Exception e)", type_label=constructor_declaration];
165 [label="23_ e.printStackTrace();", type_label=expression_statement];
170 [label="24_  public FileData (File file, String name, boolean directory)", type_label=constructor_declaration];
184 [label="25_ this.file = file;", type_label=expression_statement];
190 [label="26_ this.name = name;", type_label=expression_statement];
196 [label="27_ this.directory = directory;", type_label=expression_statement];
202 [label="28_ try", type_label=try];
204 [label="29_ Cipher cipher = Cipher.getInstance('AES/CBC/PKCS5Padding');", type_label=expression_statement];
213 [label="30_ byte[] keyBytes = 'weakkey12345678'.getBytes();", type_label=expression_statement];
223 [label="31_ byte[] ivBytes = '1234567890123456'.getBytes();", type_label=expression_statement];
233 [label="32_ SecretKeySpec secretKey = new SecretKeySpec(keyBytes, 'AES');", type_label=expression_statement];
242 [label="33_ IvParameterSpec ivSpec = new IvParameterSpec(ivBytes);", type_label=expression_statement];
250 [label="34_ cipher.init(Cipher.ENCRYPT_MODE, secretKey, ivSpec);", type_label=expression_statement];
260 [label="35_ System.out.println('Cipher initialized with Secret');", type_label=expression_statement];
268 [label="36_ catch (Exception e)", type_label=catch];
274 [label="36_ e.printStackTrace();", type_label=expression_statement];
1 [label="1_ start_node", type_label=start];
18 -> 24  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
24 -> 32  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
32 -> 40  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
40 -> 46  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
46 -> 52  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
52 -> 58  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
58 -> 64  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
70 -> 74  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
74 -> 79  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
79 -> 84  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
84 -> 158  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
84 -> 170  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
93 -> 102  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
102 -> 108  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
108 -> 116  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
116 -> 124  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
124 -> 132  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
132 -> 141  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
141 -> 150  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
158 -> 165  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
170 -> 184  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
184 -> 190  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
190 -> 196  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
196 -> 202  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
202 -> 204  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
204 -> 213  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
204 -> 268  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
213 -> 223  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
213 -> 268  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
223 -> 233  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
223 -> 268  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
233 -> 242  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
233 -> 268  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
242 -> 250  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
242 -> 268  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
250 -> 260  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
250 -> 268  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
260 -> 268  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
268 -> 274  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 158  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 170  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
