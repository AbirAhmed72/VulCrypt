digraph  {
16 [label="2_ import android.annotation.TargetApi;", type_label=expression_statement];
22 [label="3_ import android.app.NotificationManager;", type_label=expression_statement];
28 [label="4_ import android.content.Context;", type_label=expression_statement];
34 [label="5_ import android.content.SharedPreferences;", type_label=expression_statement];
40 [label="6_ import android.content.pm.PackageInfo;", type_label=expression_statement];
48 [label="7_ import android.content.pm.PackageManager;", type_label=expression_statement];
56 [label="8_ import android.content.pm.Signature;", type_label=expression_statement];
64 [label="9_ import android.media.AudioManager;", type_label=expression_statement];
70 [label="10_ import android.widget.Toast;", type_label=expression_statement];
76 [label="11_ import java.io.BufferedReader;", type_label=expression_statement];
82 [label="12_ import java.io.PrintStream;", type_label=expression_statement];
88 [label="13_ import java.util.ArrayList;", type_label=expression_statement];
94 [label="14_ import java.util.StringTokenizer;", type_label=expression_statement];
100 [label="15_ import javax.crypto.Cipher;", type_label=expression_statement];
106 [label="16_ import java.security.KeyPair;", type_label=expression_statement];
112 [label="17_ import java.security.KeyPairGenerator;", type_label=expression_statement];
118 [label="18_ import java.security.PrivateKey;", type_label=expression_statement];
124 [label="19_ import java.security.PublicKey;", type_label=expression_statement];
130 [label="20_ public class PrefsManager ", type_label=class_declaration];
134 [label="21_ private static final String PREFS_NAME = 'mainPreferences';", type_label=expression_statement];
140 [label="22_ private static final String PREF_DEFAULTDIRECTORY = 'DefaultDir';", type_label=expression_statement];
146 [label="23_ String cipherName221 =  'DES';", type_label=expression_statement];
154 [label="25_ android.util.Log.d('cipherName-221', javax.crypto.Cipher.getInstance(cipherName221).getAlgorithm());", type_label=expression_statement];
176 [label="26_  catch (java.security.NoSuchAlgorithmException|javax.crypto.NoSuchPaddingException aRaNDomName)", type_label=constructor_declaration];
194 [label="27_  public static final void setDefaultDir (Context context, String dir)", type_label=method_declaration];
206 [label="28_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putString(PREF_DEFAULTDIRECTORY, dir).commit();", type_label=expression_statement];
226 [label="30_  public static final String getDefaultDir (Context context)", type_label=method_declaration];
235 [label="31_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getString(PREF_DEFAULTDIRECTORY, null);", type_label=return];
249 [label="33_ private static final String PREF_LOGGING = 'logging';", type_label=expression_statement];
258 [label="35_ KeyPairGenerator keyGen = KeyPairGenerator.getInstance('RSA');", type_label=expression_statement];
267 [label="36_ keyGen.initialize(512);", type_label=expression_statement];
273 [label="37_ KeyPair keyPair = keyGen.generateKeyPair();", type_label=expression_statement];
281 [label="38_ PublicKey publicKey = keyPair.getPublic();", type_label=expression_statement];
289 [label="39_ PrivateKey privateKey = keyPair.getPrivate();", type_label=expression_statement];
297 [label="40_ Cipher cipher = Cipher.getInstance('RSA/ECB/PKCS1Padding');", type_label=expression_statement];
306 [label="41_ cipher.init(Cipher.ENCRYPT_MODE, publicKey);", type_label=expression_statement];
315 [label="42_ System.out.println('Cipher initialized with a weak');", type_label=expression_statement];
323 [label="43_  catch (Exception e)", type_label=constructor_declaration];
330 [label="43_ e.printStackTrace();", type_label=expression_statement];
335 [label="44_  public static void setLoggingMode (Context context, boolean IsOn)", type_label=method_declaration];
347 [label="45_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putBoolean(PREF_LOGGING, IsOn).commit();", type_label=expression_statement];
367 [label="47_  public static boolean getLoggingMode (Context context)", type_label=method_declaration];
376 [label="48_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getBoolean(PREF_LOGGING, false);", type_label=return];
390 [label="50_ private static final String PREF_LOGCYCLE = 'logcycle';", type_label=expression_statement];
396 [label="51_  public static void setLogCycleMode (Context context, boolean IsOn)", type_label=method_declaration];
408 [label="52_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putBoolean(PREF_LOGCYCLE, IsOn).commit();", type_label=expression_statement];
428 [label="54_  public static boolean getLogcycleMode (Context context)", type_label=method_declaration];
437 [label="55_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getBoolean(PREF_LOGCYCLE, false);", type_label=return];
451 [label="57_ private static final String PREF_LASTCYCLEDATE = 'lastcycledate';", type_label=expression_statement];
457 [label="58_  public static void setLastCycleDate (Context context, long date)", type_label=method_declaration];
469 [label="59_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putLong(PREF_LASTCYCLEDATE, date).commit();", type_label=expression_statement];
489 [label="61_  public static long getLastcycleDate (Context context)", type_label=method_declaration];
498 [label="62_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getLong(PREF_LASTCYCLEDATE, 0);", type_label=return];
512 [label="64_ private static final String PREF_NEXT_LOCATION = 'nextLocation';", type_label=expression_statement];
518 [label="65_  public static void setNextLocationMode (Context context, boolean IsOn)", type_label=method_declaration];
530 [label="66_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putBoolean(PREF_NEXT_LOCATION, IsOn).commit();", type_label=expression_statement];
550 [label="68_  public static boolean getNextLocationMode (Context context)", type_label=method_declaration];
559 [label="69_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getBoolean(PREF_NEXT_LOCATION, false);", type_label=return];
573 [label="71_ private static final String PREF_MUTE_RESULT = 'muteresult';", type_label=expression_statement];
579 [label="72_  public static void setMuteResult (Context context, int state)", type_label=method_declaration];
591 [label="73_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putInt(PREF_MUTE_RESULT, state).commit();", type_label=expression_statement];
611 [label="75_  public static int getMuteResult (Context context)", type_label=method_declaration];
620 [label="76_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getInt(PREF_MUTE_RESULT, PHONE_IDLE);", type_label=return];
634 [label="78_ private static final String PREF_PHONE_STATE = 'phoneState';", type_label=expression_statement];
640 [label="79_ public static final int PHONE_IDLE = 0;", type_label=expression_statement];
646 [label="80_ public static final int PHONE_RINGING = 1;", type_label=expression_statement];
652 [label="81_ public static final int PHONE_CALL_ACTIVE = 2;", type_label=expression_statement];
658 [label="82_  public static void setPhoneState (Context context, int state)", type_label=method_declaration];
670 [label="83_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putInt(PREF_PHONE_STATE, state).commit();", type_label=expression_statement];
690 [label="85_  public static int getPhoneState (Context context)", type_label=method_declaration];
699 [label="86_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getInt(PREF_PHONE_STATE, PHONE_IDLE);", type_label=return];
713 [label="88_ private static final String PREF_PHONE_WARNED =n'notifiedCannotReadPhoneState';", type_label=expression_statement];
719 [label="90_  public static void setNotifiedCannotReadPhoneState (nContext context, boolean state)", type_label=method_declaration];
731 [label="92_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putBoolean(PREF_PHONE_WARNED, state).commit();", type_label=expression_statement];
751 [label="94_  public static boolean getNotifiedCannotReadPhoneState (Context context)", type_label=method_declaration];
760 [label="95_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getBoolean(PREF_PHONE_WARNED, false);", type_label=return];
774 [label="97_ private static final String PREF_LOCATION_ACTIVE = 'locationActive';", type_label=expression_statement];
780 [label="98_  public static void setLocationState (Context context, boolean state)", type_label=method_declaration];
792 [label="99_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putBoolean(PREF_LOCATION_ACTIVE, state).commit();", type_label=expression_statement];
812 [label="101_  public static boolean getLocationState (Context context)", type_label=method_declaration];
821 [label="102_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getBoolean(PREF_LOCATION_ACTIVE, false);", type_label=return];
835 [label="104_ private static final String PREF_STEP_COUNT = 'stepCounter';", type_label=expression_statement];
841 [label="105_ public static final int STEP_COUNTER_IDLE = -3;", type_label=expression_statement];
848 [label="106_ public static final int STEP_COUNTER_WAKEUP = -2;", type_label=expression_statement];
855 [label="107_ public static final int STEP_COUNTER_WAKE_LOCK = -1;", type_label=expression_statement];
862 [label="108_  public static void setStepCount (Context context, int steps)", type_label=method_declaration];
874 [label="109_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putInt(PREF_STEP_COUNT, steps).commit();", type_label=expression_statement];
894 [label="111_  public static int getStepCount (Context context)", type_label=method_declaration];
903 [label="112_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getInt(PREF_STEP_COUNT, -3);", type_label=return];
918 [label="114_ private final static String PREF_ORIENTATION_STATE = 'orientationState';", type_label=expression_statement];
924 [label="115_ public static final int ORIENTATION_IDLE = -2;", type_label=expression_statement];
931 [label="116_ public static final int ORIENTATION_WAITING = -1;", type_label=expression_statement];
938 [label="117_ public static final int ORIENTATION_DONE = 0;", type_label=expression_statement];
944 [label="118_  public static void setOrientationState (Context context, int state)", type_label=method_declaration];
956 [label="119_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE).edit()n.putInt(PREF_ORIENTATION_STATE, state).commit();", type_label=expression_statement];
976 [label="121_  public static int getOrientationState (Context context)", type_label=method_declaration];
985 [label="122_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getInt(PREF_ORIENTATION_STATE, ORIENTATION_IDLE);", type_label=return];
999 [label="124_ private static final String NUM_CLASSES = 'numClasses';", type_label=expression_statement];
1005 [label="125_  private static int getNumClasses (SharedPreferences prefs)", type_label=method_declaration];
1014 [label="126_ if(prefs.contains('delay'))", type_label=if];
1022 [label="128_ prefs.edit().clear().commit();", type_label=expression_statement];
1033 [label="129_ return prefs.getInt(NUM_CLASSES, 0);", type_label=return];
1040 [label="130_  public static int getNumClasses (Context context)", type_label=method_declaration];
1049 [label="131_ SharedPreferences prefsn= context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);", type_label=expression_statement];
1061 [label="133_ return getNumClasses(prefs);", type_label=return];
1066 [label="134_ private static final String IS_CLASS_USED = 'isClassUsed';", type_label=expression_statement];
1072 [label="135_  private static boolean isClassUsed (SharedPreferences prefs, int classNum)", type_label=method_declaration];
1084 [label="136_ String prefName = IS_CLASS_USED + String.valueOf(classNum);", type_label=expression_statement];
1095 [label="137_ return prefs.getBoolean(prefName, false);", type_label=return];
1102 [label="138_  public static boolean isClassUsed (Context context, int classNum)", type_label=method_declaration];
1114 [label="139_ SharedPreferences prefsn= context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);", type_label=expression_statement];
1126 [label="141_ return isClassUsed(prefs, classNum);", type_label=return];
1132 [label="142_  public static int getNewClass (Context context)", type_label=method_declaration];
1141 [label="143_ SharedPreferences prefsn= context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);", type_label=expression_statement];
1153 [label="145_ int n = getNumClasses(prefs);", type_label=expression_statement];
1161 [label="146_ StringBuilder builder = new StringBuilder(IS_CLASS_USED);", type_label=expression_statement];
1169 [label="147_ for(int classNum = 0;classNum < n;++classNum)", type_label=for];
1181 [label="149_ if(!isClassUsed(prefs, classNum))", type_label=if];
1190 [label="151_ builder.append(classNum);", type_label=expression_statement];
1196 [label="152_ prefs.edit().putBoolean(builder.toString(), true).commit();", type_label=expression_statement];
1212 [label="153_ return classNum;", type_label=return];
1214 [label="154_ builder.append(n);", type_label=expression_statement];
1220 [label="155_ prefs.edit().putInt(NUM_CLASSES, n + 1)n.putBoolean(builder.toString(), true).commit();", type_label=expression_statement];
1243 [label="157_ return n;", type_label=return];
1245 [label="158_ private static final String PREF_LAST_INVOCATION = 'lastInvocationTime';", type_label=expression_statement];
1251 [label="159_  public static void setLastInvocationTime (Context context, long time)", type_label=method_declaration];
1263 [label="160_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putLong(PREF_LAST_INVOCATION, time).commit();", type_label=expression_statement];
1283 [label="162_  public static long getLastInvocationTime (Context context)", type_label=method_declaration];
1292 [label="163_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getLong(PREF_LAST_INVOCATION, Long.MAX_VALUE);", type_label=return];
1308 [label="165_ private static final String PREF_LAST_ALARM = 'lastAlarmTime';", type_label=expression_statement];
1314 [label="166_  public static void setLastAlarmTime (Context context, long time)", type_label=method_declaration];
1326 [label="167_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putLong(PREF_LAST_ALARM, time).commit();", type_label=expression_statement];
1346 [label="169_  public static long getLastAlarmTime (Context context)", type_label=method_declaration];
1355 [label="170_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getLong(PREF_LAST_ALARM, Long.MAX_VALUE);", type_label=return];
1371 [label="172_ public static final int RINGER_MODE_NONE = -99;", type_label=expression_statement];
1378 [label="173_ public static final int RINGER_MODE_NORMAL = 10;", type_label=expression_statement];
1384 [label="174_ public static final int RINGER_MODE_VIBRATE = 20;", type_label=expression_statement];
1390 [label="175_ public static final int RINGER_MODE_DO_NOT_DISTURB = 30;", type_label=expression_statement];
1396 [label="176_ public static final int RINGER_MODE_MUTED = 40;", type_label=expression_statement];
1402 [label="177_ public static final int RINGER_MODE_ALARMS = 50;", type_label=expression_statement];
1408 [label="178_ public static final int RINGER_MODE_SILENT = 60;", type_label=expression_statement];
1414 [label="179_  public static int getCurrentMode (Context context)", type_label=method_declaration];
1423 [label="181_ if(android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M)", type_label=if];
1445 [label="183_ switch (n((NotificationManager)ncontext.getSystemService(Context.NOTIFICATION_SERVICE)n).getCurrentInterruptionFilter())n", type_label=switch];
1461 [label="188_ case  NotificationManager.INTERRUPTION_FILTER_NONE:", type_label=case];
1466 [label="189_ return RINGER_MODE_SILENT;", type_label=return];
1468 [label="190_ case  NotificationManager.INTERRUPTION_FILTER_ALARMS:", type_label=case];
1473 [label="191_ return RINGER_MODE_ALARMS;", type_label=return];
1475 [label="192_ case  NotificationManager.INTERRUPTION_FILTER_PRIORITY:", type_label=case];
1480 [label="193_ return RINGER_MODE_DO_NOT_DISTURB;", type_label=return];
1482 [label="194_ default:", type_label=case];
1484 [label="195_ AudioManager audion= (AudioManager)context.getSystemService(Context.AUDIO_SERVICE);", type_label=expression_statement];
1497 [label="197_ switch (audio.getRingerMode())n", type_label=switch];
1504 [label="199_ case AudioManager.RINGER_MODE_SILENT:", type_label=case];
1509 [label="200_ return RINGER_MODE_MUTED;", type_label=return];
1511 [label="201_ case AudioManager.RINGER_MODE_VIBRATE:", type_label=case];
1516 [label="202_ return RINGER_MODE_VIBRATE;", type_label=return];
1518 [label="203_ default:", type_label=case];
1520 [label="204_ return RINGER_MODE_NORMAL;", type_label=return];
1522 [label="205_  public static String getRingerStateName (Context context, int mode)", type_label=method_declaration];
1534 [label="206_ int res;", type_label=expression_statement];
1538 [label="207_ switch (mode)n", type_label=switch];
1542 [label="209_ case RINGER_MODE_NONE:", type_label=case];
1545 [label="210_ res = R.string.ringerModeNone;", type_label=expression_statement];
1553 [label="211_ break;", type_label=expression_statement];
1554 [label="212_ case RINGER_MODE_NORMAL:", type_label=case];
1557 [label="213_ res = R.string.ringerModeNormal;", type_label=expression_statement];
1565 [label="214_ break;", type_label=expression_statement];
1566 [label="215_ case RINGER_MODE_VIBRATE:", type_label=case];
1569 [label="216_ res = R.string.ringerModeVibrate;", type_label=expression_statement];
1577 [label="217_ break;", type_label=expression_statement];
1578 [label="218_ case RINGER_MODE_DO_NOT_DISTURB:", type_label=case];
1581 [label="219_ res = R.string.ringerModeNoDisturb;", type_label=expression_statement];
1589 [label="220_ break;", type_label=expression_statement];
1590 [label="221_ case RINGER_MODE_MUTED:", type_label=case];
1593 [label="222_ res = R.string.ringerModeMuted;", type_label=expression_statement];
1601 [label="223_ break;", type_label=expression_statement];
1602 [label="224_ case RINGER_MODE_ALARMS:", type_label=case];
1605 [label="225_ res = R.string.ringerModeAlarms;", type_label=expression_statement];
1613 [label="226_ break;", type_label=expression_statement];
1614 [label="227_ case RINGER_MODE_SILENT:", type_label=case];
1617 [label="228_ res = R.string.ringerModeSilent;", type_label=expression_statement];
1625 [label="229_ break;", type_label=expression_statement];
1626 [label="230_ default:", type_label=case];
1628 [label="231_ res = R.string.invalidmode;", type_label=expression_statement];
1636 [label="232_ return context.getString(res);", type_label=return];
1642 [label="233_  public static String getEnglishStateName (Context context, int mode)", type_label=method_declaration];
1654 [label="234_ switch (mode)n", type_label=switch];
1658 [label="236_ case RINGER_MODE_NONE:", type_label=case];
1661 [label="237_ return 'unchanged';", type_label=return];
1663 [label="238_ case RINGER_MODE_NORMAL:", type_label=case];
1666 [label="239_ return 'normal';", type_label=return];
1668 [label="240_ case RINGER_MODE_VIBRATE:", type_label=case];
1671 [label="241_ return 'vibrate';", type_label=return];
1673 [label="242_ case RINGER_MODE_DO_NOT_DISTURB:", type_label=case];
1676 [label="243_ return 'do-not-disturb';", type_label=return];
1678 [label="244_ case RINGER_MODE_MUTED:", type_label=case];
1681 [label="245_ return 'muted';", type_label=return];
1683 [label="246_ case RINGER_MODE_ALARMS:", type_label=case];
1686 [label="247_ return 'alarms only';", type_label=return];
1688 [label="248_ case RINGER_MODE_SILENT:", type_label=case];
1691 [label="249_ return 'silent';", type_label=return];
1693 [label="250_ default:", type_label=case];
1695 [label="251_ return '[error-invalid]';", type_label=return];
1697 [label="252_  public static int getLastRinger (Context context)", type_label=method_declaration];
1706 [label="253_ int lastRingern=  context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getInt(LAST_RINGER, RINGER_MODE_NONE);", type_label=expression_statement];
1723 [label="256_ switch (lastRinger)n", type_label=switch];
1727 [label="258_ case AudioManager.RINGER_MODE_NORMAL:", type_label=case];
1732 [label="259_ lastRinger = RINGER_MODE_NORMAL;", type_label=expression_statement];
1736 [label="260_ break;", type_label=expression_statement];
1737 [label="261_ case AudioManager.RINGER_MODE_VIBRATE:", type_label=case];
1742 [label="262_ lastRinger = RINGER_MODE_VIBRATE;", type_label=expression_statement];
1746 [label="263_ break;", type_label=expression_statement];
1747 [label="264_ case AudioManager.RINGER_MODE_SILENT:", type_label=case];
1752 [label="265_ lastRinger = RINGER_MODE_MUTED;", type_label=expression_statement];
1756 [label="266_ break;", type_label=expression_statement];
1757 [label="267_ default:", type_label=case];
1759 [label="267_ break;", type_label=expression_statement];
1760 [label="268_ return lastRinger;", type_label=return];
1762 [label="269_ private static final String CLASS_NAME = 'className';", type_label=expression_statement];
1768 [label="270_  public static void setClassName (nContext context, int classNum, String className)", type_label=method_declaration];
1783 [label="272_ String prefName = CLASS_NAME + String.valueOf(classNum) ;", type_label=expression_statement];
1794 [label="273_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putString(prefName, className).commit();", type_label=expression_statement];
1814 [label="275_  private static String getClassName (SharedPreferences prefs, int classNum)", type_label=method_declaration];
1826 [label="276_ String prefName = CLASS_NAME + String.valueOf(classNum) ;", type_label=expression_statement];
1837 [label="277_ return prefs.getString(prefName, ((Integer)classNum).toString());", type_label=return];
1850 [label="278_  public static String getClassName (Context context, int classNum)", type_label=method_declaration];
1862 [label="279_ String prefName = CLASS_NAME + String.valueOf(classNum) ;", type_label=expression_statement];
1873 [label="280_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getString(prefName, ((Integer)classNum).toString());", type_label=return];
1893 [label="282_  private static int getClassNum (SharedPreferences prefs, String className)", type_label=method_declaration];
1905 [label="283_ int n = getNumClasses(prefs);", type_label=expression_statement];
1913 [label="284_ for(int classNum = 0;classNum < n;++classNum)", type_label=for];
1925 [label="286_ if(   isClassUsed(prefs, classNum)n&& getClassName(prefs, classNum).equals(className))", type_label=if];
1943 [label="289_ return classNum;", type_label=return];
1945 [label="290_ return -1;", type_label=return];
1948 [label="291_  public static int getClassNum (Context context, String className)", type_label=method_declaration];
1960 [label="292_ return getClassNum(context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE), className);", type_label=return];
1973 [label="293_ private static final String EVENT_NAME = 'eventName';", type_label=expression_statement];
1979 [label="294_  public static void setEventName (Context context, int classNum, String eventName)", type_label=method_declaration];
1994 [label="295_ String prefName = EVENT_NAME + String.valueOf(classNum) ;", type_label=expression_statement];
2005 [label="296_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putString(prefName, eventName).commit();", type_label=expression_statement];
2025 [label="298_  public static String getEventName (Context context, int classNum)", type_label=method_declaration];
2037 [label="299_ String prefName = EVENT_NAME + String.valueOf(classNum) ;", type_label=expression_statement];
2048 [label="300_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getString(prefName, '');", type_label=return];
2062 [label="302_ private static final String EVENT_LOCATION = 'eventLocation';", type_label=expression_statement];
2068 [label="303_  public static void setEventLocation (nContext context, int classNum, String eventLocation)", type_label=method_declaration];
2083 [label="305_ String prefName = EVENT_LOCATION + String.valueOf(classNum) ;", type_label=expression_statement];
2094 [label="306_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putString(prefName, eventLocation).commit();", type_label=expression_statement];
2114 [label="308_  public static String getEventLocation (Context context, int classNum)", type_label=method_declaration];
2126 [label="309_ String prefName = EVENT_LOCATION + String.valueOf(classNum) ;", type_label=expression_statement];
2137 [label="310_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getString(prefName, '');", type_label=return];
2151 [label="312_ private static final String EVENT_DESCRIPTION = 'eventDescription';", type_label=expression_statement];
2157 [label="313_  public static void setEventDescription (nContext context, int classNum, String eventDescription)", type_label=method_declaration];
2172 [label="315_ String prefName = EVENT_DESCRIPTION + String.valueOf(classNum) ;", type_label=expression_statement];
2183 [label="316_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putString(prefName, eventDescription).commit();", type_label=expression_statement];
2203 [label="318_  public static String getEventDescription (Context context, int classNum)", type_label=method_declaration];
2215 [label="319_ String prefName = EVENT_DESCRIPTION + String.valueOf(classNum) ;", type_label=expression_statement];
2226 [label="320_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getString(prefName, '');", type_label=return];
2240 [label="322_ private static final String EVENT_COLOUR = 'eventColour';", type_label=expression_statement];
2246 [label="323_  public static void setEventColour (nContext context, int classNum, String eventColour)", type_label=method_declaration];
2261 [label="326_ String prefName = EVENT_COLOUR + String.valueOf(classNum) ;", type_label=expression_statement];
2272 [label="327_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putString(prefName, eventColour).commit();", type_label=expression_statement];
2292 [label="329_  public static String getEventColour (Context context, int classNum)", type_label=method_declaration];
2304 [label="330_ String prefName = EVENT_COLOUR + String.valueOf(classNum) ;", type_label=expression_statement];
2315 [label="331_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getString(prefName, '');", type_label=return];
2329 [label="333_ private static final String AGENDAS = 'agendas';", type_label=expression_statement];
2335 [label="334_ private static final String AGENDAS_DELIMITER = ',';", type_label=expression_statement];
2341 [label="335_  public static void putCalendars (nContext context, int classNum, ArrayList<Long> calendarIds)", type_label=method_declaration];
2359 [label="338_ String prefName = AGENDAS + String.valueOf(classNum) ;", type_label=expression_statement];
2370 [label="339_ StringBuilder agendaList = new StringBuilder();", type_label=expression_statement];
2377 [label="340_ boolean first = true;", type_label=expression_statement];
2382 [label="341_ for( long id:calendarIds)", type_label=for];
2387 [label="343_ if(first)", type_label=if];
2390 [label="344_ first = false;", type_label=expression_statement];
2394 [label="346_ agendaList.append(AGENDAS_DELIMITER);", type_label=expression_statement];
2400 [label="347_ agendaList.append(id);", type_label=expression_statement];
2406 [label="348_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putString(prefName, agendaList.toString())n.commit();", type_label=expression_statement];
2429 [label="351_  public static ArrayList<Long> getCalendars (Context context, int classNum)", type_label=method_declaration];
2444 [label="352_ String prefName = AGENDAS + String.valueOf(classNum) ;", type_label=expression_statement];
2455 [label="353_ StringTokenizer tokenizern= new StringTokenizer(ncontext.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getString(prefName, ''), AGENDAS_DELIMITER);", type_label=expression_statement];
2476 [label="357_ ArrayList<Long> calendarIds = new ArrayList<Long>();", type_label=expression_statement];
2489 [label="358_ while(tokenizer.hasMoreTokens())", type_label=while];
2496 [label="360_ long nextId = Long.parseLong(tokenizer.nextToken());", type_label=expression_statement];
2508 [label="361_ calendarIds.add(nextId);", type_label=expression_statement];
2514 [label="362_ return calendarIds;", type_label=return];
2516 [label="363_ public static final int ONLY_BUSY = 0;", type_label=expression_statement];
2522 [label="364_ public static final int ONLY_NOT_BUSY = 1;", type_label=expression_statement];
2528 [label="365_ public static final int BUSY_AND_NOT = 2;", type_label=expression_statement];
2534 [label="366_ private static final String WHETHER_BUSY = 'whetherBusy';", type_label=expression_statement];
2540 [label="367_  public static void setWhetherBusy (Context context, int classNum, int whetherBusy)", type_label=method_declaration];
2555 [label="368_ String prefName = WHETHER_BUSY + String.valueOf(classNum) ;", type_label=expression_statement];
2566 [label="369_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putInt(prefName, whetherBusy).commit();", type_label=expression_statement];
2586 [label="371_  public static int getWhetherBusy (Context context, int classNum)", type_label=method_declaration];
2598 [label="372_ String prefName = WHETHER_BUSY + String.valueOf(classNum) ;", type_label=expression_statement];
2609 [label="373_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getInt(prefName, BUSY_AND_NOT);", type_label=return];
2623 [label="375_ public static final int ONLY_PUBLIC = 0;", type_label=expression_statement];
2629 [label="376_ public static final int ONLY_PRIVATE = 1;", type_label=expression_statement];
2635 [label="377_ public static final int PUBLIC_AND_PRIVATE = 2;", type_label=expression_statement];
2641 [label="378_ private static final String WHETHER_PUBLIC = 'whetherPublic';", type_label=expression_statement];
2647 [label="379_  public static void setWhetherPublic (nContext context, int classNum, int whetherPublic)", type_label=method_declaration];
2662 [label="381_ String prefName = WHETHER_PUBLIC + String.valueOf(classNum) ;", type_label=expression_statement];
2673 [label="382_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putInt(prefName, whetherPublic).commit();", type_label=expression_statement];
2693 [label="384_  public static int getWhetherPublic (Context context, int classNum)", type_label=method_declaration];
2705 [label="385_ String prefName = WHETHER_PUBLIC + String.valueOf(classNum) ;", type_label=expression_statement];
2716 [label="386_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getInt(prefName, PUBLIC_AND_PRIVATE);", type_label=return];
2730 [label="388_ public static final int ONLY_WITH_ATTENDEES = 0;", type_label=expression_statement];
2736 [label="389_ public static final int ONLY_WITHOUT_ATTENDEES = 1;", type_label=expression_statement];
2742 [label="390_ public static final int ATTENDEES_AND_NOT = 2;", type_label=expression_statement];
2748 [label="391_ private static final String WHETHER_ATTENDEES = 'whetherAttendees';", type_label=expression_statement];
2754 [label="392_  publicnstatic void setWhetherAttendees (nContext context, int classNum, int whetherAttendees)", type_label=method_declaration];
2769 [label="395_ String prefName = WHETHER_ATTENDEES + String.valueOf(classNum) ;", type_label=expression_statement];
2780 [label="396_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putInt(prefName, whetherAttendees).commit();", type_label=expression_statement];
2800 [label="398_  public static int getWhetherAttendees (Context context, int classNum)", type_label=method_declaration];
2812 [label="399_ String prefName = WHETHER_ATTENDEES + (String.valueOf(classNum));", type_label=expression_statement];
2824 [label="400_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getInt(prefName, ATTENDEES_AND_NOT);", type_label=return];
2838 [label="402_ private static final String RINGER_ACTION = 'ringerAction';", type_label=expression_statement];
2844 [label="403_  public static void setRingerAction (Context context, int classNum, int action)", type_label=method_declaration];
2859 [label="404_ String prefName = RINGER_ACTION + (String.valueOf(classNum));", type_label=expression_statement];
2871 [label="405_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putInt(prefName, action).commit();", type_label=expression_statement];
2891 [label="407_ private static final String SOUNDFILE_END = 'soundfileEnd';", type_label=expression_statement];
2897 [label="408_  public static void setSoundFileEnd (nContext context, int classNum, String filename)", type_label=method_declaration];
2912 [label="410_ String prefName = SOUNDFILE_END + (String.valueOf(classNum));", type_label=expression_statement];
2924 [label="411_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putString(prefName, filename).commit();", type_label=expression_statement];
2944 [label="413_  public static String getSoundFileEnd (Context context, int classNum)", type_label=method_declaration];
2956 [label="414_ String prefName = SOUNDFILE_END + (String.valueOf(classNum));", type_label=expression_statement];
2968 [label="415_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getString(prefName, '');", type_label=return];
2982 [label="417_ private static final String IS_TRIGGERED = 'isTriggered';", type_label=expression_statement];
2988 [label="418_  public static void setClassTriggered (nContext context, int classNum, boolean isTriggered)", type_label=method_declaration];
3003 [label="421_ String prefName = IS_TRIGGERED + (String.valueOf(classNum));", type_label=expression_statement];
3015 [label="422_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putBoolean(prefName, isTriggered).commit();", type_label=expression_statement];
3035 [label="424_  public static boolean isClassTriggered (Context context, int classNum)", type_label=method_declaration];
3047 [label="425_ String prefName = IS_TRIGGERED + (String.valueOf(classNum));", type_label=expression_statement];
3059 [label="426_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getBoolean(prefName, false);", type_label=return];
3073 [label="428_ private static final String LAST_TRIGGER_END = 'lastTriggerEnd';", type_label=expression_statement];
3079 [label="429_  public static void setLastTriggerEnd (nContext context, int classNum, long endTime)", type_label=method_declaration];
3094 [label="432_ String prefName = LAST_TRIGGER_END + (String.valueOf(classNum));", type_label=expression_statement];
3106 [label="433_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putLong(prefName, endTime).commit();", type_label=expression_statement];
3126 [label="435_  public static long getLastTriggerEnd (Context context, int classNum)", type_label=method_declaration];
3138 [label="436_ String prefName = LAST_TRIGGER_END + (String.valueOf(classNum));", type_label=expression_statement];
3150 [label="437_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getLong(prefName, Long.MIN_VALUE);", type_label=return];
3166 [label="439_ private static final String IS_ACTIVE = 'isActive';", type_label=expression_statement];
3172 [label="440_  public static void setClassActive (nContext context, int classNum, boolean isActive)", type_label=method_declaration];
3187 [label="443_ String prefName = IS_ACTIVE + (String.valueOf(classNum));", type_label=expression_statement];
3199 [label="444_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putBoolean(prefName, isActive).commit();", type_label=expression_statement];
3219 [label="446_  public static boolean isClassActive (Context context, int classNum)", type_label=method_declaration];
3231 [label="447_ String prefName = IS_ACTIVE + (String.valueOf(classNum));", type_label=expression_statement];
3243 [label="448_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getBoolean(prefName, false);", type_label=return];
3257 [label="450_ private static final String IS_WAITING = 'isWaiting';", type_label=expression_statement];
3263 [label="451_  public static void setClassWaiting (nContext context, int classNum, boolean isWaiting)", type_label=method_declaration];
3278 [label="454_ String prefName = IS_WAITING + (String.valueOf(classNum));", type_label=expression_statement];
3290 [label="455_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putBoolean(prefName, isWaiting).commit();", type_label=expression_statement];
3310 [label="457_  public static boolean isClassWaiting (Context context, int classNum)", type_label=method_declaration];
3322 [label="458_ String prefName = IS_WAITING + (String.valueOf(classNum));", type_label=expression_statement];
3334 [label="459_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getBoolean(prefName, false);", type_label=return];
3348 [label="461_ private static final String LAST_ACTIVE_EVENT = 'lastActiveEvent';", type_label=expression_statement];
3354 [label="462_  public static void setLastActive (nContext context, int classNum, String name)", type_label=method_declaration];
3369 [label="465_ String prefName = LAST_ACTIVE_EVENT + (String.valueOf(classNum));", type_label=expression_statement];
3381 [label="466_ context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.edit().putString(prefName, name).commit();", type_label=expression_statement];
3401 [label="468_  public static String getLastActive (Context context, int classNum)", type_label=method_declaration];
3413 [label="469_ String prefName = LAST_ACTIVE_EVENT + String.valueOf(classNum) ;", type_label=expression_statement];
3424 [label="470_ return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)n.getString(prefName, '');", type_label=return];
3438 [label="472_  private static void removeClass (SharedPreferences prefs, int classNum)", type_label=method_declaration];
3450 [label="473_ String num = String.valueOf(classNum);", type_label=expression_statement];
3459 [label="474_ prefs.edit().putBoolean(IS_CLASS_USED + (num), false)n.putString(CLASS_NAME + (num), '')n.putString(EVENT_NAME + (num), '')n.putString(EVENT_LOCATION + (num), '')n.putString(EVENT_DESCRIPTION + (num), '')n.putString(EVENT_COLOUR + (num), '')n.putString(AGENDAS + (num), '')n.putInt(WHETHER_BUSY + (num), BUSY_AND_NOT)n.putInt(WHETHER_RECURRENT + (num), RECURRENT_AND_NOT)n.putInt(WHETHER_ORGANISER + (num), ORGANISER_AND_NOT)n.putInt(WHETHER_PUBLIC + (num), PUBLIC_AND_PRIVATE)n.putInt(WHETHER_ATTENDEES + (num), ATTENDEES_AND_NOT)n.putInt(RINGER_ACTION + (num), RINGER_MODE_NONE)n.putBoolean(RESTORE_RINGER + (num), false)n.putInt(BEFORE_MINUTES + (num), 0)n.putInt(BEFORE_ORIENTATION + (num), BEFORE_ANY_POSITION)n.putInt(BEFORE_CONNECTION + (num), BEFORE_ANY_CONNECTION)n.putInt(AFTER_MINUTES + (num), 0)n.putInt(AFTER_STEPS + (num), 0)n.putInt(TARGET_STEPS + (num), 0)n.putInt(AFTER_METRES + (num), 0)n.putString(LATITUDE + (num), '360.0')n.putString(LONGITUDE + (num), '360.0')n.putBoolean(NOTIFY_START + (num), false)n.putBoolean(NOTIFY_END + (num), false)n.putBoolean(IS_TRIGGERED + (num), false)n.putLong(LAST_TRIGGER_END + (num), Long.MIN_VALUE)n.putBoolean(IS_ACTIVE + (num), false)n.putBoolean(IS_WAITING + (num), false)n.putString(LAST_ACTIVE_EVENT + (num), '')n.commit();", type_label=expression_statement];
3709 [label="505_  public static void removeClass (Context context, String name)", type_label=method_declaration];
3721 [label="506_ SharedPreferences prefsn= context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);", type_label=expression_statement];
3733 [label="508_ removeClass(prefs, getClassNum(prefs, name));", type_label=expression_statement];
3743 [label="509_  public static void saveSettings (Context context, PrintStream out)", type_label=method_declaration];
3755 [label="510_ try", type_label=try];
3757 [label="512_ PackageInfo packageInfo = context.getPackageManager()n.getPackageInfo(ncontext.getPackageName(),nPackageManager.GET_SIGNATURES);", type_label=expression_statement];
3775 [label="516_ for( Signature signature:packageInfo.signatures)", type_label=for];
3782 [label="518_ out.printf('Signature=%sn', signature.toCharsString());", type_label=expression_statement];
3792 [label="519_ catch (Exception e)", type_label=catch];
3798 [label="519_ String s = R.string.packageinfofail + ' ' +ne.getCause().toString() + ' ' +ne.getMessage();", type_label=expression_statement];
3824 [label="522_ Toast.makeText(context, s, Toast.LENGTH_LONG).show();", type_label=expression_statement];
3837 [label="523_ out.printf('logging=%sn',nPrefsManager.getLoggingMode(context) ? 'true' : 'false');", type_label=expression_statement];
3851 [label="525_ out.printf('nextLocation=%sn',ngetNextLocationMode(context) ? 'true' : 'false');", type_label=expression_statement];
3864 [label="527_ int num = PrefsManager.getNumClasses(context);", type_label=expression_statement];
3873 [label="528_ for(int i = 0;i < num;++i)", type_label=for];
3885 [label="529_ if(PrefsManager.isClassUsed(context, i))", type_label=if];
3894 [label="531_ saveClassSettings(context, out, i);", type_label=expression_statement];
1 [label="1_ start_node", type_label=start];
16 -> 22  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
22 -> 28  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
28 -> 34  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
34 -> 40  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
40 -> 48  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
48 -> 56  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
56 -> 64  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
64 -> 70  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
70 -> 76  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
76 -> 82  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
82 -> 88  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
88 -> 94  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
94 -> 100  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
100 -> 106  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
106 -> 112  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
112 -> 118  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
118 -> 124  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
130 -> 134  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
134 -> 140  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
140 -> 146  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
146 -> 249  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
176 -> 194  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
194 -> 206  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
226 -> 235  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
249 -> 390  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
258 -> 267  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
267 -> 273  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
273 -> 281  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
281 -> 289  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
289 -> 297  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
297 -> 306  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
306 -> 315  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
323 -> 330  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
335 -> 347  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
367 -> 376  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
376 -> 3837  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
390 -> 451  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
396 -> 408  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
428 -> 437  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
451 -> 512  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
457 -> 469  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
489 -> 498  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
512 -> 573  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
518 -> 530  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
550 -> 559  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
559 -> 3851  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
573 -> 634  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
579 -> 591  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
611 -> 620  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
634 -> 640  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
640 -> 646  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
646 -> 652  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
652 -> 713  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
658 -> 670  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
690 -> 699  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
713 -> 774  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
719 -> 731  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
751 -> 760  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
774 -> 835  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
780 -> 792  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
812 -> 821  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
835 -> 841  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
841 -> 848  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
848 -> 855  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
855 -> 918  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
862 -> 874  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
894 -> 903  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
918 -> 924  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
924 -> 931  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
931 -> 938  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
938 -> 999  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
944 -> 956  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
976 -> 985  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
999 -> 1066  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1005 -> 1014  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1014 -> 1022  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1014 -> 1033  [color=red, controlflow_type="next_line 6', edge_type=CFG_edge, key=0, label='next_line 6"];
1022 -> 1033  [color=red, controlflow_type="next_line 2', edge_type=CFG_edge, key=0, label='next_line 2"];
1033 -> 1061  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1033 -> 1153  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1033 -> 1905  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1040 -> 1049  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1049 -> 1061  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1061 -> 1005  [color=red, controlflow_type="method_call|1062", edge_type=CFG_edge, key=0, label=method_call];
1061 -> 3864  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1066 -> 1245  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1072 -> 1084  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1084 -> 1095  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1095 -> 1126  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1095 -> 1181  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1095 -> 1925  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1102 -> 1114  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1114 -> 1126  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1126 -> 1072  [color=red, controlflow_type="method_call|1127", edge_type=CFG_edge, key=0, label=method_call];
1126 -> 3885  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1132 -> 1141  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1141 -> 1153  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1153 -> 1161  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1153 -> 1005  [color=red, controlflow_type="method_call|1157", edge_type=CFG_edge, key=0, label=method_call];
1161 -> 1169  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1169 -> 1181  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1169 -> 1214  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1169 -> 1169  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1181 -> 1190  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1181 -> 1169  [color=red, controlflow_type="next_line 6', edge_type=CFG_edge, key=0, label='next_line 6"];
1181 -> 1072  [color=red, controlflow_type="method_call|1184", edge_type=CFG_edge, key=0, label=method_call];
1190 -> 1196  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1196 -> 1212  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1214 -> 1220  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1220 -> 1243  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1245 -> 1308  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1251 -> 1263  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1283 -> 1292  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1308 -> 1371  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1314 -> 1326  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1346 -> 1355  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1371 -> 1378  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1378 -> 1384  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1384 -> 1390  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1390 -> 1396  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1396 -> 1402  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1402 -> 1408  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1408 -> 1762  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1414 -> 1423  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1423 -> 1445  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1423 -> 1484  [color=red, controlflow_type="next_line 6', edge_type=CFG_edge, key=0, label='next_line 6"];
1445 -> 1461  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1445 -> 1468  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1445 -> 1475  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1445 -> 1482  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1461 -> 1466  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1468 -> 1473  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1475 -> 1480  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1482 -> 1484  [color=red, controlflow_type=default_exit, edge_type=CFG_edge, key=0, label=default_exit];
1484 -> 1497  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1497 -> 1504  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1497 -> 1511  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1497 -> 1518  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1504 -> 1509  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1511 -> 1516  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1518 -> 1520  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1522 -> 1534  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1534 -> 1538  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1538 -> 1542  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1538 -> 1554  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1538 -> 1566  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1538 -> 1578  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1538 -> 1590  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1538 -> 1602  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1538 -> 1614  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1538 -> 1626  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1542 -> 1545  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1545 -> 1553  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1553 -> 1636  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1554 -> 1557  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1557 -> 1565  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1565 -> 1636  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1566 -> 1569  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1569 -> 1577  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1577 -> 1636  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1578 -> 1581  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1581 -> 1589  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1589 -> 1636  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1590 -> 1593  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1593 -> 1601  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1601 -> 1636  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1602 -> 1605  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1605 -> 1613  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1613 -> 1636  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1614 -> 1617  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1617 -> 1625  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1625 -> 1636  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1626 -> 1628  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1628 -> 1636  [color=red, controlflow_type=switch_out, edge_type=CFG_edge, key=0, label=switch_out];
1642 -> 1654  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1654 -> 1658  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1654 -> 1663  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1654 -> 1668  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1654 -> 1673  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1654 -> 1678  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1654 -> 1683  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1654 -> 1688  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1654 -> 1693  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1658 -> 1661  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1663 -> 1666  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1668 -> 1671  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1673 -> 1676  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1678 -> 1681  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1683 -> 1686  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1688 -> 1691  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1693 -> 1695  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1697 -> 1706  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1706 -> 1723  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1723 -> 1727  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1723 -> 1737  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1723 -> 1747  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1723 -> 1757  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
1727 -> 1732  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1732 -> 1736  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1736 -> 1760  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1737 -> 1742  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1742 -> 1746  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1746 -> 1760  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1747 -> 1752  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1752 -> 1756  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1756 -> 1760  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1757 -> 1759  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
1759 -> 1760  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
1762 -> 1973  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1768 -> 1783  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1783 -> 1794  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1814 -> 1826  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1826 -> 1837  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1837 -> 1925  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1850 -> 1862  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1862 -> 1873  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1893 -> 1905  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1905 -> 1913  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
1905 -> 1005  [color=red, controlflow_type="method_call|1909", edge_type=CFG_edge, key=0, label=method_call];
1913 -> 1925  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1913 -> 1945  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
1913 -> 1913  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
1925 -> 1943  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
1925 -> 1913  [color=red, controlflow_type="next_line 6', edge_type=CFG_edge, key=0, label='next_line 6"];
1925 -> 1072  [color=red, controlflow_type="method_call|1928", edge_type=CFG_edge, key=0, label=method_call];
1925 -> 1814  [color=red, controlflow_type="method_call|1934", edge_type=CFG_edge, key=0, label=method_call];
1943 -> 3733  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1945 -> 3733  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
1948 -> 1960  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1973 -> 2062  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
1979 -> 1994  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1994 -> 2005  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2025 -> 2037  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2037 -> 2048  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2062 -> 2151  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2068 -> 2083  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2083 -> 2094  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2114 -> 2126  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2126 -> 2137  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2151 -> 2240  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2157 -> 2172  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2172 -> 2183  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2203 -> 2215  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2215 -> 2226  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2240 -> 2329  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2246 -> 2261  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2261 -> 2272  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2292 -> 2304  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2304 -> 2315  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2329 -> 2335  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2335 -> 2516  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2341 -> 2359  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2359 -> 2370  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2370 -> 2377  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2377 -> 2382  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2382 -> 2387  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2382 -> 2406  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2382 -> 2382  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
2387 -> 2390  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2387 -> 2394  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2390 -> 2400  [color=red, controlflow_type="next_line 2', edge_type=CFG_edge, key=0, label='next_line 2"];
2394 -> 2400  [color=red, controlflow_type="next_line 4', edge_type=CFG_edge, key=0, label='next_line 4"];
2400 -> 2382  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
2429 -> 2444  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2444 -> 2455  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2455 -> 2476  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2476 -> 2489  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2489 -> 2496  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
2489 -> 2514  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
2496 -> 2508  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2508 -> 2489  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
2516 -> 2522  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2522 -> 2528  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2528 -> 2534  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2534 -> 2623  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2540 -> 2555  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2555 -> 2566  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2586 -> 2598  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2598 -> 2609  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2623 -> 2629  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2629 -> 2635  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2635 -> 2641  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2641 -> 2730  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2647 -> 2662  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2662 -> 2673  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2693 -> 2705  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2705 -> 2716  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2730 -> 2736  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2736 -> 2742  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2742 -> 2748  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2748 -> 2838  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2754 -> 2769  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2769 -> 2780  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2800 -> 2812  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2812 -> 2824  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2838 -> 2891  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2844 -> 2859  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2859 -> 2871  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2891 -> 2982  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2897 -> 2912  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2912 -> 2924  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2944 -> 2956  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
2956 -> 2968  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
2982 -> 3073  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
2988 -> 3003  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3003 -> 3015  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3035 -> 3047  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3047 -> 3059  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3073 -> 3166  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
3079 -> 3094  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3094 -> 3106  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3126 -> 3138  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3138 -> 3150  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3166 -> 3257  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
3172 -> 3187  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3187 -> 3199  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3219 -> 3231  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3231 -> 3243  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3257 -> 3348  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
3263 -> 3278  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3278 -> 3290  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3310 -> 3322  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3322 -> 3334  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3348 -> 176  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
3348 -> 323  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
3354 -> 3369  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3369 -> 3381  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3401 -> 3413  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3413 -> 3424  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3438 -> 3450  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3450 -> 3459  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3459 -> 3733  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
3709 -> 3721  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3721 -> 3733  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3733 -> 3438  [color=red, controlflow_type="method_call|3734", edge_type=CFG_edge, key=0, label=method_call];
3733 -> 1893  [color=red, controlflow_type="method_call|3738", edge_type=CFG_edge, key=0, label=method_call];
3743 -> 3755  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
3755 -> 3757  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
3757 -> 3775  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3757 -> 3792  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
3775 -> 3792  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
3775 -> 3837  [color=red, controlflow_type=try_exit, edge_type=CFG_edge, key=0, label=try_exit];
3775 -> 3782  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
3775 -> 3775  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
3782 -> 3792  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
3782 -> 3775  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
3792 -> 3798  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
3798 -> 3824  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3824 -> 3837  [color=red, controlflow_type=catch_exit, edge_type=CFG_edge, key=0, label=catch_exit];
3837 -> 3851  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3837 -> 367  [color=red, controlflow_type="method_call|3844", edge_type=CFG_edge, key=0, label=method_call];
3851 -> 3864  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3851 -> 550  [color=red, controlflow_type="method_call|3858", edge_type=CFG_edge, key=0, label=method_call];
3864 -> 3873  [color=red, controlflow_type="next_line 1', edge_type=CFG_edge, key=0, label='next_line 1"];
3864 -> 1040  [color=red, controlflow_type="method_call|3868", edge_type=CFG_edge, key=0, label=method_call];
3873 -> 3885  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
3873 -> 3873  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
3885 -> 3894  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
3885 -> 3873  [color=red, controlflow_type="next_line 6', edge_type=CFG_edge, key=0, label='next_line 6"];
3885 -> 1102  [color=red, controlflow_type="method_call|3887", edge_type=CFG_edge, key=0, label=method_call];
3894 -> 3873  [color=red, controlflow_type="next_line 2', edge_type=CFG_edge, key=0, label='next_line 2"];
1 -> 176  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 194  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 226  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 323  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 335  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 367  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 396  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 428  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 457  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 489  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 518  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 550  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 579  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 611  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 658  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 690  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 719  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 751  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 780  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 812  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 862  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 894  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 944  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 976  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1005  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1040  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1072  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1102  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1132  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1251  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1283  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1314  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1346  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1414  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1522  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1642  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1697  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1768  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1814  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1850  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1893  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1948  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 1979  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2025  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2068  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2114  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2157  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2203  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2246  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2292  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2341  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2429  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2540  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2586  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2647  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2693  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2754  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2800  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2844  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2897  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2944  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 2988  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3035  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3079  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3126  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3172  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3219  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3263  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3310  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3354  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3401  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3438  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3709  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
1 -> 3743  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
